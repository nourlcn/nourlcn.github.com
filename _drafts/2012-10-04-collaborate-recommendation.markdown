--- 
title: 推荐系统学习笔记-协同过滤 
type: post
layout: post
tags: 
- recommendation
---

#### 协同过滤的分类
学术界针对协同过滤提出的解决方法：

+ 基于邻域的方法
  1. 基于用户的协同过滤
>	简单讲，当对A进行推荐时，首先找到用于A的相似用户B，将B喜欢的item中，A没有看过/听过/知道的物品推荐给A.
计算用户的相似度，主要参考的数据是用户的行为（比如对同一item的打分，喜欢/不喜欢）.

  1. 基于物品的协同过滤
>简单讲，当对A进行推荐时，找到A之前喜欢过的item的相似item，推荐给A.

+ 隐语义模型
+ 基于图的随机游走算法

#### 协同过滤里面的三个"度"

+ 置信度
>在购买了A的情况下，购买B的可能性，即 条件概率 Confidence（A==>B） = P（B|A）

+ 支持度
>在所有交易中，既有A又有B的可能性，即 概率 Support （A==>B） = P（AB）

+ 提升度（Lift）
>用于度量一个推荐规则是否可用；定义为相对于不用规则，使用推荐规则可以提升多少。
>
>Lift（A==>B）= Confidence（A==>B）/Support（B）= Support（AB）/（Support（A）Support（B））

#### 协同过滤中的一些公式

用户u，v，N(u) N(v)分别表示用户u v对item的正反馈集合.

+ 计算用户相似度 Jaccard公式
>w = |N(u)和N(v)的交集|/|N(u)和N(v)的并集|

+ 余弦相似度计算公式
> w = |N(u)和N(v)的交集|/sqrt(|N(u)|*|N(v)|)

+ 哈哈

#### 协同过滤中的一些计算方法

+ 将用户-物品矩阵转换为 物品-用户 倒排表矩阵，计算用户相似度，将计算复杂度为O(|U|*|U|)的问题降低问题规模.
+ 哈哈

内容主要参考自互联网及书籍[《推荐系统实践》](http://book.douban.com/subject/10769749/)，感谢该书作者及Google.