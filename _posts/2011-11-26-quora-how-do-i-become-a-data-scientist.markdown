--- 
title: "[Quora]How do I become a data scientist"
type: post
layout: post
tags: 
- Quora
---
Quora上这篇《How do I become a data scientist》回复得很好，把核心部分分享给大家<br />原文地址：<a href="http://goo.gl/rwqZ5">http://goo.gl/rwqZ5</a><br /><br />Strictly speaking, there is no such thing as "data science" (see <span><a href="http://www.quora.com/What-is-data-science">What is data           science?</a></span> ). See also: Vardi, Science has only two       legs: <a href="http://portal.acm.org/ft_gateway.cfm?id=1810892&type=html&coll=GUIDE&dl=GUIDE&CFID=102012981&CFTOKEN=18184364" rel="nofollow" target="_blank">http://portal.acm.o<wbr></wbr>rg/ft_gateway...</a><br /><br />Here are some resources I've collected about working with data, I       hope you find them useful  (note: I'm an undergrad student, this       is not an expert opinion in any way).<br /><b><br /></b>1) <b>Learn about matrix factorizations</b><br />    Take the Computational Linear Algebra course (it is sometimes         called Applied Linear Algebra or Matrix Computations or         Numerical Analysis or Matrix Analysis and it can be either CS or         Applied Math course). Matrix  decomposition algorithms are         fundamental to many data mining applications and are usually         underrepresented in a standard "machine learning" curriculum.         With TBs of data traditional tools such as Matlab become not         suitable for the job, you cannot just run eig() on Big Data.         Distributed matrix computation packages such as those included         in Apache Mahout [1] are trying to fill this void but you need         to understand how the numeric algorithms/LAPACK/BLAS routines         [2][3][4][5] work in order to use them properly, adjust for         special cases, build your own and scale them up to terabytes of         data on a cluster of commodity machines.[6] Usually numerics         courses are built upon undergraduate algebra and calculus so you         should be good with prerequisites.  I'd recommend these         resources for self study/reference material:<br /><ul><li>Start with Bellkor, Matrix factorization for recommender         systems: <a href="http://www2.research.att.com/~volinsky/papers/ieeecomputer.pdf" rel="nofollow" target="_blank">http://www2.rese<wbr></wbr>arch.att.com/~vo...</a>         also see <span><a href="http://www.quora.com/What-are-some-good-resources-for-learning-about-numerical-analysis">What             are some good resources for learning about numerical             analysis?</a></span></li></ul><br />2) <b>Learn about distributed computing</b><br />    It is important to learn how to work with a Linux cluster and         how to design scalable distributed algorithms if you want to         work with big data (<span><a href="http://www.quora.com/Why-the-current-obsession-with-big-data">Why             the current obsession with "big" data?</a></span> ).<br /><ul><li>If you want to squeeze the most out of your (rented) hardware         it is also becoming increasingly important to be able to utilize         the full power of multicore (see <a href="http://en.wikipedia.org/wiki/Moore%27s_law" target="_blank">http://en.wikipedia.<wbr></wbr>org/wiki/Moo...</a>         )</li><li>Note: this topic is not part of a standard Machine Learning         track but you can probably find courses such as Distributed         Systems or Parallel Programming in your CS/EE catalog.</li></ul><ul><li>For conventional methods of distributed computing start with         Jack Dongarra and Jim Demmel's materials: <a href="http://www.netlib.org/utk/people/JackDongarra/" rel="nofollow" target="_blank">http://www.netlib.org/utk<wbr></wbr>/people...</a>,         <a href="http://www.cs.berkeley.edu/~demmel/" rel="nofollow" target="_blank">http://www.cs.berkeley.ed<wbr></wbr>u/~demmel/</a></li><li>For a more recent approach inspired by Google and applicable         to some easily parallelizable problems start with Jimmy Lin and         Chris Dyer's Data-Intensive Text Processing with MapReduce: <a href="http://www.umiacs.umd.edu/~jimmylin/book.html" rel="nofollow" target="_blank">http://www.umi<wbr></wbr>acs.umd.edu/~jimmy...</a></li><li>Also <span><a href="http://www.quora.com/What-are-some-good-resources-for-learning-about-distributed-computing-Why">What             are some good resources for learning about distributed             computing? Why?</a></span></li></ul><br />3) <b>Learn about statistical analysis</b><br />    Start learning statistics by coding with R: <span><a href="http://www.quora.com/What-are-essential-references-for-R">What             are essential references for R?</a></span> and experiment         with real-world data: <span><a href="http://www.quora.com/Data/Where-can-I-get-large-datasets-open-to-the-public">Data:             Where can I get large datasets open to the public?</a></span><br /><ul><li>Cosma Shalizi at CMU compiled some great materials on         computational statistics and data analysis, check out his         courses: <a href="http://www.stat.cmu.edu/~cshalizi/" rel="nofollow" target="_blank">http://www.stat.cmu.edu/~<wbr></wbr>cshalizi/</a>         also <span><a href="http://www.quora.com/What-are-some-good-resources-for-learning-about-statistical-analysis-Why">What             are some good resources for learning about statistical             analysis? Why?</a></span></li></ul><ul><li>Check out job descriptions on KDNuggets and see what do you         need to know in order to get a job as a statistician: <a href="http://www.kdnuggets.com/jobs/" rel="nofollow" target="_blank">http://www.kdnuggets.com/<wbr></wbr>jobs/</a></li><li>See what interests you more, do your market research. Would         you prefer working with vendor tools and do mostly modeling and         reporting, or build data mining systems yourself and write a lot         of code? Do you see yourself as a corporate employee, a         researcher in academia or a startup founder in the future? What         data interests you? Structure your studies based on that.</li></ul><br />4) <b>Learn about optimization</b><br />    This subject is essentially prerequisite to understanding many         <span><a href="http://www.quora.com/Machine-Learning">Machine             Learning</a></span> and <span><a href="http://www.quora.com/Signal-Processing">Signal             Processing</a></span> algorithms, besides being important in         its own right.<br /><ul><li>Start with S.P. Boyd's video lectures: <a href="http://www.stanford.edu/~boyd/" target="_blank">http://www.stanford.edu/~<wbr></wbr>boyd/</a>         also <span><a href="http://www.quora.com/What-are-some-good-resources-to-learn-about-optimization">What             are some good resources to learn about optimization?</a></span></li></ul><br />5) <b>Learn about machine learning</b><br />    Start with Andrew Ng's open class: <a href="http://www.ml-class.org/" rel="nofollow" target="_blank">http://www.ml-class.org/</a><br /><ul><li>Also <span><a href="http://www.quora.com/Machine-Learning/What-are-some-good-resources-for-learning-about-machine-learning-Why">Machine             Learning: What are some good resources for learning about             machine learning? Why?</a></span> and <span><a href="http://www.quora.com/Large-Scale-Learning/What-are-some-introductory-resources-for-learning-about-large-scale-machine-learning-Why">Large             Scale Learning: What are some introductory resources for             learning about large scale machine learning? Why?</a></span></li></ul><ul><li>Statistics vs. machine learning, fight!: <a href="http://brenocon.com/blog/2008/12/statistics-vs-machine-learning-fight/" rel="nofollow" target="_blank">http://brenocon.com/blog/<wbr></wbr>2008/12...</a></li><li>You can structure your study program according to online         course catalogs <br />and curricula of MIT, Stanford or other top schools. Experiment         with <br />data a lot, hack some code, ask questions, talk to good people,         set up a web crawler in your garage: <a href="http://www.columbia.edu/~ak2834/misc/larry-page-sergey-brin-GOOGLE-early-days.jpg" rel="nofollow" target="_blank">http://www.columbia.edu/~<wbr></wbr>ak2834/...</a></li><li>You can join one of these startups and learn by doing: <span><a href="http://www.quora.com/What-startups-are-hiring-engineers-with-strengths-in-machine-learning-NLP">What             startups are hiring engineers with strengths in machine             learning/NLP?</a></span></li><li>The alternative (and rather expensive) option is to enroll in         a CS <br />program/Machine Learning track if you prefer studying in a         formal <br />setting. See: <span><a href="http://www.quora.com/What-makes-a-Masters-in-Computer-Science-MS-CS-degree-worth-it-and-why">What             makes a Master's in Computer Science (MS CS) degree worth it             and why?</a></span></li><li>Try to avoid overspecialization. The breadth-first approach         often works best when learning a new field and dealing with hard         problems. See <a href="http://en.wikipedia.org/wiki/Second_voyage_of_HMS_Beagle" target="_blank">http://en.wikipedia.org/w<wbr></wbr>iki/Sec...</a></li></ul><br />6) <b>Learn about information retrieval</b><br />    Machine learning Is not as cool as it sounds: <a href="http://teddziuba.com/2008/05/machine-learning-is-not-as-coo.html" rel="nofollow" target="_blank">http://teddziuba.<wbr></wbr>com/2008/05/mac...</a><br /><ul><li>Start with <span><a href="http://www.quora.com/What-are-the-best-resources-to-learn-about-web-crawling-and-scraping/answer/Borislav-Agapiev">Borislav             Agapiev's answer to What are the best resources to learn             about web crawling and scraping?</a></span> and <span><a href="http://www.quora.com/Information-Retrieval/What-are-some-good-resources-to-get-started-with-Information-Retrieval-Why">Information             Retrieval: What are some good resources to get started with             Information Retrieval? Why?</a></span></li></ul><br />7)<b> Learn about signal detection and estimation</b><br />    This is a classic topic and "data science" par excellence in         my opinion. <br /><ul><li> Some of these methods were used to guide the Apollo mission or         detect <br />enemy submarines and are still in active use in many fields.         This is <br />often part of the EE curriculum.</li><li>I'd recommend starting with Rabiner's intro texts, they are         clearly written and concise: <a href="http://www.amazon.com/Theory-Application-Digital-Signal-Processing/dp/0139141014" target="_blank">http://www.amazon.com/The<wbr></wbr>ory-App...</a></li><li>Also see <span><a href="http://www.quora.com/What-are-some-good-resources-for-learning-about-signal-estimation-and-detection">What             are some good resources for learning about signal estimation             and detection?</a></span></li></ul><br />8)<b> Master algorithms and data structures</b><span> </span><br /><ul><li><span><a href="http://www.quora.com/What-are-the-most-learner-friendly-resources-for-learning-about-algorithms">What             are the most learner-friendly resources for learning about             algorithms?</a></span></li></ul><ul></ul><br />9) <b>Practice</b>     <br /><ul><li>Carpentry: <a href="http://software-carpentry.org/" rel="nofollow" target="_blank">http://software-carpentry<wbr></wbr>.org/</a></li><li><span><a href="http://www.quora.com/Programming-Challenges-1/What-are-some-good-toy-problems-in-data-science">Programming             Challenges: What are some good "toy problems" in data             science?</a></span></li></ul><br />If you do decide to go for a Masters degree:<br /><br />10) <b>Study Engineering</b><br /><br />    I'd go for CS with a focus on either IR or Machine Learning or a     combination of both and take some systems courses along the way. As     a "data scientist" you will have to write a ton of code and probably     develop distributed algorithms/systems to process massive amounts of     data. MS in Statistics will teach you how to do modeling and     regression analysis etc, not how to build systems, I think the     latter is more urgently needed these days as the old tools become     obsolete with the avalanche of data. There is a shortage of     engineers who can build a data mining system from the ground up. You     can pick up statistics from books and experiments with R (see item 3     above) or take some statistics classes as a part of your CS     studies.<br /><br />Good luck.<br /><br />[1] <a href="http://mahout.apache.org/" rel="nofollow" target="_blank">http://mahout.apache.<wbr></wbr>org/</a><br />[2] <a href="http://www.netlib.org/lapack/" rel="nofollow" target="_blank">http://www.netlib.org<wbr></wbr>/lapack/</a><br />[3] <a href="http://www.netlib.org/eispack/" rel="nofollow" target="_blank">http://www.netlib.org<wbr></wbr>/eispack/</a><br />[4] <a href="http://math.nist.gov/javanumerics/jama/" rel="nofollow" target="_blank">http://math.nist.gov/<wbr></wbr>javanumeric...</a><br />[5] <a href="http://www.netlib.org/scalapack/" rel="nofollow" target="_blank">http://www.netlib.org<wbr></wbr>/scalapack/</a><br />[6] <a href="http://labs.google.com/papers/mapreduce.html" target="_blank">http://labs.google.co<wbr></wbr>m/papers/ma...</a>
