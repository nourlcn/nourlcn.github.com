--- 
title: Ysmart:Solve Translation Challenge
type: post
layout: post
tags: 
- Facebook
- Hive
- YSmart
---
<p>2011-07-20 9:00—11:00</p>  <p>先回顾一下《<a href="http://u.ownlinux.net/nourl/2011/rcfile.html" target="_blank">RCFile：solve storage challenge</a>》中的内容：</p>  <p>+RCFile优点</p>  <blockquote>   <p>.具有Row的优点</p>    <p>.具有column的优点</p>    <p>.具有压缩的特性</p>    <p>*Choosing a right Row-Group Size</p> </blockquote>  <p>+RCFile in Facebook System</p>  <blockquote>   <p>1. 当用户发起请求时，会访问fb的webservers</p>    <p>2. 用户与web server交互，产生的log data和user data存储在web server 与warehouse中间的过渡模块，即dataloaders</p>    <p>3. dataloaders模块中的数据，将以RCFile的数据格式存储在facebook的warehouse中</p> </blockquote>  <p>+<strong>Summary of RCFile</strong></p>  <blockquote>   <p>. data placement structure lays a foundation for MR-based big data analytics</p>    <p>. an operational system</p> </blockquote>  <p><strong>+Evaluation Environment（实验及测试环境）</strong></p>  <blockquote>   <p>.Cluster 40nodes in fb</p>    <p>.Node</p>    <p>  ..intel CPU 8cores</p>    <p>  ..32G M</p>    <p>  ..12*1T disks</p>    <p>  ..Kernel 2.6</p>    <p>  ..Hadoop 0.2</p>    <p></p> </blockquote>  <p><strong>Outline</strong></p>  <p><strong>+解决第二个challenge</strong></p>  <blockquote>   <p><strong>Ysmart</strong>: a high efficient query-to-MR translator</p>    <p>  .. correlations-aware is the key</p>    <p>  .. fundamention</p>    <p>  .. experiment</p> </blockquote>  <p>+Translating SQL-Like queries to MR Jobs</p>  <blockquote>   <p>Existing Approach：</p>    <p>. "Sentence by sentence“ traslation</p>    <p>. Implementation: Hive and Pig</p>    <p><strong>Problem:</strong></p>    <p>. ignore common input data</p>    <p>. ignore common data transition</p> </blockquote>  <p>+Hand-coding MR jobs:</p>  <blockquote>   <p>. high performance</p>    <p>. lots of coding even for a simple job</p>    <p>. redundant coding</p>    <p>. hard to debug</p> </blockquote>  <p>+Existing SQL-to-MR Transslator</p>  <blockquote>   <p>. easy programming</p>    <p>. low performance</p> </blockquote>  <p>+Approaches and Critical Challenges</p>  <blockquote>   <p><strong>Main STEP:</strong></p>    <p>1. Primitive MR job</p>    <p>2. Identify correlations</p>    <p>3. Merge Correlated MR jobs</p>    <p>4. MR jobs for best performance</p> </blockquote>  <blockquote>   <p><strong>Detail three steps</strong></p>    <p><strong>.</strong> Identify major sentences with operations that shuffle the data</p>    <p>  .. such as, group by/join/order by</p>    <p><strong>.</strong> For every operation in the major sentence that shuffles the data,a corresponding MR job is generated</p>    <p><strong>.</strong> Add other operations, such as selection and projection into corresponding MR jobs</p></blockquote>
