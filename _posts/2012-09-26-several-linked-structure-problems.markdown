--- 
title: 算法：关于链表的几道题
type: post
layout: post
tags: 
- Algorithms
---

 -  两个链表的公共子节点问题

思路： 
>方法1：
如果两个单链表A、B存在公共子节点，那么从某一个节点X开始，X->next的节点总是相同的。可以遍历一遍A链表，用时O(n)，求出len(A)=n；遍历B链表，用时O(m)，求出len(B)=m;假设n>m，从A的n-m个节点开始遍历，B的第一个节点开始遍历，将会同时到达X节点，遍历终止条件为 pa->next==pb-->next且均不为空指针。

>方法2：
如果A链表为abcde，B链表为xyzcde，将其中一个链表尾部连接到另一个链表的头部，那么新的链表将会出现环，比如B的尾部连接到A的头部，新链表为xyzcdeabcde，这样A和B的公共节点就是产生环的那个节点，问题转化为如何判断单链表是否有环。

 - 如何判断两个单链表是否相交？

思路：
>方法1： 如果AB相交，那么A的最后一个节点和B的最后一个节点一定相同。遍历A链表，找到最后一个节点pa；遍历B链表，找到最后一个节点pb；若pa==pb，则链表相交。
