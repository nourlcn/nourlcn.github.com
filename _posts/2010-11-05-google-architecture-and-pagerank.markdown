--- 
title: Google Architecture and PageRank
type: post
layout: post
tags: 
- Google
---
<a href="http://u.ownlinux.net/nourl/wp-content/uploads/2010/11/0001.png"><img class="alignleft" style="display: block; float: none; margin-left: auto; margin-right: auto; border: 0px;" title="图像 000" src="http://u.ownlinux.net/nourl/wp-content/uploads/2010/11/000_thumb1.png" border="0" alt="图像 000" width="304" height="327" /></a><br/><br/><span style="font-family: Courier New; font-size: small;">1. 什么是PageRank?</span><br/><br/><span style="font-family: Courier New; font-size: small;">PageRank是Google的核心技术,网页PageRank级别的依据是:</span><br/><br/><span style="font-family: Courier New; font-size: small;">a) A链接到B == A vote B</span><br/><br/><span style="font-family: Courier New; font-size: small;">b) 根据每个页面的票数评定重要性</span><br/><br/><span style="font-family: Courier New; font-size: small;">c) 数量+质量,重要的网页投票,权重大</span><br/><br/><span style="font-family: Courier New; font-size: small;">这是一个自动的过程,排除了人为添加关键字及竞价排名的因素,所得的结果是相对公平的.</span><br/><br/><span style="font-family: Courier New; font-size: small;">具体的算法是:</span><br/><br/><span style="font-family: Courier New; font-size: small;">假定页面A,有很多指向它的链接,定义为T<sub>1</sub>,T<sub>2</sub>……T<sub>n </sub>,再定义阻尼系数d(通常d=0.85,0<=d<=1);定义C(A):页面A中指向其他页面的链接数,A的PageRank值为PR(A):</span><br/><br/><sub><span style="font-family: Courier New; color: #004000; font-size: medium;"><em><strong>PR(A) = (1-d) + d*(PR(T1)/C(T1)+……..+PT(Tn)/C(Tn));</strong></em></span></sub><br/><br/><span style="font-family: Courier New; font-size: small;">公式中我们可以看出,一个页面的PR值和指向这个页面的页面的PR值相关,如果Ti的PR值增大,在Ti页面中的链接数目不变的情况下,A的PR值也会增大;如果Ti的PR值不变,Ti中的链接数目增多,那么A的PR值会相应的减小.</span><br/><br/><span style="font-family: Courier New; font-size: small;">2. Google系统主要分为以下几个模块:</span><br/><ul><br/>	<li><br/><div><span style="font-family: Courier New; font-size: small;">网页抓取:</span></div></li><br/></ul><br/><span style="font-family: Courier New; font-size: small;">网页抓取部分通过分布的crawler来进行,urlServer把需要抓取的url指派给crawler,(urlServer和crawler均是使用python写的,为了更好的parse url的结构,提高抓取的效率), crawler把抓取到的页面发送到store server中,store server把页面进行压缩,存储到Repository中; 这样就完成了对web页面的抓取;</span><br/><ul><br/>	<li><br/><div><span style="font-family: Courier New; font-size: small;">索引:</span></div></li><br/></ul><br/><span style="font-family: Courier New; font-size: small;">Indexer从repository中提取一个页面,先解压,然后对页面进行分析,分析出页面中所有的anchor text并发送给anchors;另一方面,对每个页面赋予docID值,这个值在系统中是唯一标识一个页面的项,根据docID对页面进行前续索引,把部分排序过的页面存储与桶(Barrels)中;</span><br/><br/><span style="font-family: Courier New; font-size: small;">Sorter是一个排序器,它从桶中取出部分排序后的结果,根据wordID进行倒排索引,并把排序的结果再放入桶中.这次排序的粒度比前续索引要小;</span><br/><br/><span style="font-family: Courier New; font-size: small;">词典是一种数据结构,它记录了每个页面的url,长度,关键字等信息,在排序的过程中会用到;</span><br/><br/><span style="font-family: Courier New; font-size: small;">经过索引和排序,计算每个页面的PR值.</span><br/><ul><br/>	<li><br/><div><span style="font-family: Courier New; font-size: small;">搜索:</span></div></li><br/></ul><br/><span style="font-family: Courier New; font-size: small;">用户输入一串要检索的词时,google首先parse这个字符串,提取出关键词word,根据这些关键词与字典和桶中的wordID匹配,最匹配的页面会显示在最前面.</span><br/><br/><span style="font-family: Courier New; font-size: small;">3. 总结与感想</span><br/><br/><span style="font-family: Courier New; font-size: small;"> 读这篇经典的论文,我对google的框架及搜索的过程有了一个大致的了解,学习复杂问题所使用的分模块处理方法。读论文是提高计算机修养的好途径。</span><br/><br/><span style="font-family: Courier New; font-size: x-small;">最后一次更新：2010-11-24 by Lee</span>
